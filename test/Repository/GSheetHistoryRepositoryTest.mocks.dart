// Mocks generated by Mockito 5.2.0 from annotations
// in test_application/test/Repository/GSheetHistoryRepositoryTest.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:test_application/GSheet_REST/Spreadsheet.dart' as _i2;
import 'package:test_application/Model/HistoryModel.dart' as _i5;
import 'package:test_application/Repository/HistoryRepository/GSheetsHistoryRepository.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeSpreadsheet_0 extends _i1.Fake implements _i2.Spreadsheet {}

/// A class which mocks [GSheetsHistoryRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockGSheetsHistoryRepository extends _i1.Mock
    implements _i3.GSheetsHistoryRepository {
  MockGSheetsHistoryRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Spreadsheet> get spreadsheet =>
      (super.noSuchMethod(Invocation.getter(#spreadsheet),
              returnValue: Future<_i2.Spreadsheet>.value(_FakeSpreadsheet_0()))
          as _i4.Future<_i2.Spreadsheet>);
  @override
  _i4.Future<bool> appendData(List<_i5.History>? histories) =>
      (super.noSuchMethod(Invocation.method(#appendData, [histories]),
          returnValue: Future<bool>.value(false)) as _i4.Future<bool>);
}
